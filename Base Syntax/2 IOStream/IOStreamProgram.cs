using System;

namespace _2_IOStream
{
    class IOStreamProgram
    {
        static void Main(string[] args)
        {
            //----------------------Організація потоку виводу-----------------------------------------------------------
            Console.Write("Ось так виглядає\n{0}\n{1}\n{2}", "Приклад", "форматного", "виводу");
            /* {0}, {1}, {2} - індекси параметрів виводу (співпадає з кількістю наступни параметрів методу)
              можливі спеціальні символи:
               \n - переведення курсора на наступну строку;
               \r - возврат курсора на початок строки (виведення буде здійснюватися поверх раніше відображених символів);
               \t - переведення курсора на позицію табуляції;
               \" - виведення символу кавичек;
               \\ - виведення символу бек-слеш.
            */

            Console.WriteLine("\n---------------------------"); // на відміну від Write(), WriteLine() післі виводу переводе курсор на нову строку

            Console.Write("Приклад виведення\nбез форматування"); //Виведення без вказування форматування,
                                                                    //але в стрічці можуть використовуватися спеціальні символи

            Console.WriteLine("\n---------------------------");
            int a = 10;
            string b = "а = ";
            Console.Write("Приклад виведення з використанням операції конкатенації: " + b + a.ToString()); //слід пам'ятати, що в параметрах тера усі араемтри приводити до строкоого типу даних
            Console.WriteLine("\n---------------------------");
            //----------------------------------------------------------------------------------------------------------
            //----------------------Організація потоку вводу------------------------------------------------------------
            int var_int;
            double var_double;
            float var_float;
            
            Console.Write("Введення цілочисельного значення ");
            var_int = Convert.ToInt32(Console.ReadLine());

            Console.Write("Введення вещественого значення double ");
            var_double = Convert.ToDouble(Console.ReadLine());

            Console.Write("Введення вещественого значення float ");
            var_float = (float)Convert.ToDouble(Console.ReadLine()); //в класі Convert нема метода ToFloat, томк беремо найбільш прийнятний тип double,
                                                                     //до нього перетворюємо, а потім використовуємо явне перетворення його до float
            
            Console.WriteLine("\n---------------------------");
            
            //інший спосіб
            //використання базового методу Parse() класів типів даних
            Console.Write("\nВведення цілочисельного значення ");
            var_int = int.Parse(Console.ReadLine());

            Console.Write("Введення вещественого значення double ");
            var_double = double.Parse(Console.ReadLine());

            Console.Write("Введення вещественого значення float ");
            var_float = float.Parse(Console.ReadLine());
            Console.ReadKey();
        }
    }
}
